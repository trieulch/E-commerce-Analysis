Q1:

SELECT DATE_FORMAT(w_s.created_at,'%Y-%m') AS `MONTH`,
		MIN(w_s.created_at) AS Start_date,
		COUNT(w_s.website_session_id) AS sessions,
        COUNT(o.order_id) AS orders
        FROM website_sessions w_s
        LEFT JOIN orders o ON w_s.website_session_id = o.website_session_id
        WHERE lower(w_s.utm_source) LIKE 'gsearch' AND w_s.created_at BETWEEN DATE_SUB('2012-11-27', INTERVAL 8 MONTH) AND '2012-11-27'
        GROUP BY DATE_FORMAT(w_s.created_at,'%Y-%m')
        ORDER BY DATE_FORMAT(w_s.created_at,'%Y-%m');
        
-- The monthly trend of sessions and orders of gsearch are picking up in 8-month period. What a significant number

Q2:
SELECT DATE_FORMAT(w_s.created_at,'%Y-%m') AS `MONTH`,
		MIN(w_s.created_at) AS Start_date,
        COUNT(DISTINCT CASE WHEN lower(w_s.utm_campaign) LIKE 'brand' THEN w_s.website_session_id END) AS brand_sessions,
        COUNT(DISTINCT CASE WHEN lower(w_s.utm_campaign) LIKE 'nonbrand' THEN w_s.website_session_id END) AS non_brand_sessions,
		COUNT(w_s.website_session_id) AS sessions,
        COUNT(o.order_id) AS orders,
        CONCAT(ROUND((COUNT(o.order_id)/COUNT(w_s.website_session_id))*100,2),'%') AS cvr_sessions_to_orders
        FROM website_sessions w_s
        LEFT JOIN orders o ON w_s.website_session_id = o.website_session_id
        WHERE lower(w_s.utm_source) LIKE 'gsearch' AND w_s.created_at BETWEEN DATE_SUB('2012-11-27', INTERVAL 8 MONTH) AND '2012-11-27'
        GROUP BY DATE_FORMAT(w_s.created_at,'%Y-%m')
        ORDER BY DATE_FORMAT(w_s.created_at,'%Y-%m');
-- The brands' traffic is picking up. This could be notable increasement from 5 to 383(increased by 75.6 times)

Q3:
SELECT DATE_FORMAT(w_s.created_at,'%Y-%m') AS `MONTH`,
		MIN(w_s.created_at) AS Start_date,
        COUNT(DISTINCT CASE WHEN lower(w_s.device_type) LIKE 'mobile' THEN w_s.website_session_id END) AS mobile_sessions,
        COUNT(DISTINCT CASE WHEN lower(w_s.device_type) LIKE 'desktop' THEN w_s.website_session_id END) AS desktop_sessions,
		COUNT(w_s.website_session_id) AS sessions,
        COUNT(o.order_id) AS orders,
        CONCAT(ROUND((COUNT(o.order_id)/COUNT(w_s.website_session_id))*100,2),'%') AS cvr_sessions_to_orders
        FROM website_sessions w_s
        LEFT JOIN orders o ON w_s.website_session_id = o.website_session_id
        WHERE lower(w_s.utm_source) LIKE 'gsearch' AND w_s.created_at BETWEEN DATE_SUB('2012-11-27', INTERVAL 8 MONTH) AND '2012-11-27' AND lower(w_s.utm_campaign) LIKE 'nonbrand'
        GROUP BY DATE_FORMAT(w_s.created_at,'%Y-%m')
        ORDER BY DATE_FORMAT(w_s.created_at,'%Y-%m');
        
-- The desktop_sessions is dominated than mobile_sessions. This could be an biased behavior of customers' usage or poor mobile UI/UX.
Q4:
SELECT DATE_FORMAT(w_s.created_at,'%Y-%m') AS `MONTH`,
		MIN(w_s.created_at) AS Start_date,
        COUNT(DISTINCT CASE WHEN lower(w_s.utm_source) LIKE 'gsearch' THEN w_s.website_session_id END) AS gsearch_sessions,
        COUNT(DISTINCT CASE WHEN lower(w_s.utm_source) LIKE 'bsearch' THEN w_s.website_session_id END) AS bsearch_sessions,
        COUNT(DISTINCT CASE WHEN lower(w_s.utm_source) LIKE 'socialbook' THEN w_s.website_session_id END) AS socialbook_sessions,
        COUNT(DISTINCT CASE WHEN lower(w_s.utm_source) IS NULL THEN w_s.website_session_id END) AS unknown_sessions,
		COUNT(w_s.website_session_id) AS sessions
        FROM website_sessions w_s
        LEFT JOIN orders o ON w_s.website_session_id = o.website_session_id
        WHERE w_s.created_at BETWEEN DATE_SUB('2012-11-27', INTERVAL 8 MONTH) AND '2012-11-27'
        GROUP BY DATE_FORMAT(w_s.created_at,'%Y-%m')
        ORDER BY DATE_FORMAT(w_s.created_at,'%Y-%m');
        
-- The monthly sessions of gsearch is picking up and it seems a strong correlation with other channels and total sessions.

Q5:
SELECT DATE_FORMAT(w_s.created_at,'%Y-%m') AS `MONTH`,
		MIN(w_s.created_at) AS Start_date,
		COUNT(w_s.website_session_id) AS sessions,
        COUNT(o.order_id) AS orders,
        CONCAT(ROUND((COUNT(o.order_id)/COUNT(w_s.website_session_id))*100,2),'%') AS cvr_sessions_to_orders
        FROM website_sessions w_s
        LEFT JOIN orders o ON w_s.website_session_id = o.website_session_id
        WHERE w_s.created_at BETWEEN DATE_SUB('2012-11-27', INTERVAL 8 MONTH) AND '2012-11-27' AND lower(w_s.utm_campaign) LIKE 'nonbrand'
        GROUP BY DATE_FORMAT(w_s.created_at,'%Y-%m')
        ORDER BY DATE_FORMAT(w_s.created_at,'%Y-%m');
-- The cvr is picking up in the 8-month period FROM 3.07% to 4.42% increased by 31.0%. What a significant figure when in intial stages.

Q6:
SELECT MIN(website_pageview_id) FROM website_pageviews
WHERE lower(pageview_url) LIKE '/lander-1';

-- first_pageview_id = 23504

CREATE TEMPORARY TABLE first_pv_each_session_id
SELECT w_s.website_session_id,
		MIN(w_p.website_pageview_id) AS first_pv
        FROM website_sessions w_s
        LEFT JOIN website_pageviews w_p ON w_s.website_session_id = w_p.website_session_id
        WHERE lower(w_s.utm_source) LIKE 'gsearch' AND lower(w_s.utm_campaign) LIKE 'nonbrand' AND w_s.created_at BETWEEN '2012-06-19' AND '2012-07-28' AND w_p.website_pageview_id >= 23504
        GROUP BY w_s.website_session_id;

CREATE TEMPORARY TABLE landing_page_each_session_id
SELECT first_pv_each_session_id.website_session_id,
		w_p.pageview_url AS landing_page FROM first_pv_each_session_id
        LEFT JOIN website_pageviews w_p ON first_pv_each_session_id.website_session_id = w_p.website_session_id
        WHERE w_p.pageview_url IN ('/home','/lander-1');
        
WITH order_id_joined_table AS (SELECT landing_page_each_session_id.website_session_id,
		landing_page_each_session_id.landing_page,
        orders.order_id FROM landing_page_each_session_id
        LEFT JOIN orders ON landing_page_each_session_id.website_session_id = orders.website_session_id)
SELECT landing_page,
		count(distinct website_session_id) AS sessions,
        count(distinct order_id) AS orders,
        count(distinct order_id)/count(distinct website_session_id) AS conv_rate FROM order_id_joined_table
        GROUP BY landing_page;
        
-- the increasement is 0.0088, now we calcuate the increasement of sessions

SELECT 
    MAX(website_sessions.website_session_id)
FROM
    website_sessions
        LEFT JOIN
    website_pageviews w_p ON website_sessions.website_session_id = w_p.website_session_id
WHERE
    LOWER(website_sessions.utm_campaign) LIKE 'nonbrand'
        AND LOWER(website_sessions.utm_source) LIKE 'gsearch'
        AND website_sessions.created_at < '2012-11-27'
        AND LOWER(w_p.pageview_url) LIKE '/home';

        
-- the max session id of '/home' is 17145
SELECT 
    COUNT(website_sessions.website_session_id)*0.0088 AS incremental_orders,
    round(COUNT(website_sessions.website_session_id)*0.0088/4,0) AS avg_orders_per_month
FROM
    website_sessions
WHERE
    LOWER(website_sessions.utm_campaign) LIKE 'nonbrand'
        AND LOWER(website_sessions.utm_source) LIKE 'gsearch'
        AND website_sessions.created_at < '2012-11-27'
        AND website_sessions.website_session_id > 17145;

-- 22972*0.0088 = 202. in 4 months we can get 202 incremental orders since 7/29. so roughly 50 orders per month.
Q7:

CREATE TEMPORARY TABLE metrics_table
SELECT website_session_id,
		MAX(homepage) AS homepage,
        MAX(lander_1_page) AS lander_1_page,
        MAX(mrfuzzy_page) AS mrfuzzy_page,
        MAX(product_page) AS product_page,
        MAX(cart_page) AS cart_page,
        MAX(billing_page) AS billing_page,
        MAX(shipping_page) AS shipping_page,
        MAX(`order`) AS `order` FROM
(SELECT w_s.website_session_id,
		CASE WHEN lower(w_p.pageview_url) LIKE '/home' THEN 1 ELSE 0 END AS homepage,
        CASE WHEN lower(w_p.pageview_url) LIKE '/lander-1' THEN 1 ELSE 0 END AS lander_1_page,
        CASE WHEN lower(w_p.pageview_url) LIKE '/products' THEN 1 ELSE 0 END AS product_page,
        CASE WHEN lower(w_p.pageview_url) LIKE '/the-original-mr-fuzzy' THEN 1 ELSE 0 END AS mrfuzzy_page,
        CASE WHEN lower(w_p.pageview_url) LIKE '/cart' THEN 1 ELSE 0 END AS cart_page,
        CASE WHEN lower(w_p.pageview_url) LIKE '/shipping' THEN 1 ELSE 0 END AS shipping_page,
        CASE WHEN lower(w_p.pageview_url) LIKE '/billing' THEN 1 ELSE 0 END AS billing_page,
        CASE WHEN lower(w_p.pageview_url) LIKE '/thank-you-for-your-order' THEN 1 ELSE 0 END AS `order`
        FROM website_sessions w_s LEFT JOIN website_pageviews w_p ON w_s.website_session_id = w_p.website_session_id
        WHERE lower(w_s.utm_campaign) LIKE 'nonbrand' AND lower(w_s.utm_source) LIKE 'gsearch' AND w_s.created_at BETWEEN '2012-06-19' AND '2012-07-28') metrics_table
        GROUP BY website_session_id;

SELECT 
	CASE
    WHEN homepage = 1 THEN 'homepage'
    WHEN lander_1_page = 1 THEN 'lander_1_page'
    ELSE 'check the logic again'
    END AS segment,
    COUNT(DISTINCT website_session_id) AS sessions,
     COUNT(DISTINCT CASE WHEN product_page = 1 THEN website_session_id END) AS to_product,
    COUNT(DISTINCT CASE WHEN mrfuzzy_page = 1 THEN website_session_id END) AS to_mrfuzzy,
    COUNT(DISTINCT CASE WHEN cart_page = 1 THEN website_session_id END) AS to_cart,
	COUNT(DISTINCT CASE WHEN shipping_page = 1 THEN website_session_id END) AS to_shipping,
    COUNT(DISTINCT CASE WHEN billing_page = 1 THEN website_session_id END) AS to_billing,
    COUNT(DISTINCT CASE WHEN `order` = 1 THEN website_session_id END) AS to_order
    FROM metrics_table
    GROUP BY (1);

SELECT 
	CASE
    WHEN homepage = 1 THEN 'homepage'
    WHEN lander_1_page = 1 THEN 'lander_1_page'
    ELSE 'check the logic again'
    END AS segment,
    COUNT(DISTINCT website_session_id) AS sessions,
    COUNT(DISTINCT CASE WHEN mrfuzzy_page = 1 THEN website_session_id END)/COUNT(DISTINCT CASE WHEN product_page = 1 THEN website_session_id END) AS to_mrfuzzy_clickthr,
    COUNT(DISTINCT CASE WHEN cart_page = 1 THEN website_session_id END)/COUNT(DISTINCT CASE WHEN mrfuzzy_page = 1 THEN website_session_id END) AS to_cart_clickthr,
	COUNT(DISTINCT CASE WHEN shipping_page = 1 THEN website_session_id END)/COUNT(DISTINCT CASE WHEN cart_page = 1 THEN website_session_id END) AS to_shipping_clickthr,
    COUNT(DISTINCT CASE WHEN billing_page = 1 THEN website_session_id END)/COUNT(DISTINCT CASE WHEN shipping_page = 1 THEN website_session_id END) AS to_billing_clickthr,
    COUNT(DISTINCT CASE WHEN `order` = 1 THEN website_session_id END)/COUNT(DISTINCT CASE WHEN billing_page = 1 THEN website_session_id END) AS to_order_clickthr
    FROM metrics_table
    GROUP BY (1);

Q8:
SELECT MAX(website_sessions.website_session_id) FROM website_sessions
LEFT JOIN website_pageviews ON website_sessions.website_session_id = website_pageviews.website_session_id
WHERE website_pageviews.pageview_url LIKE '/billing';

-- MAX 63501


SELECT 'This month' AS `date`,pageview_each_session.pageview_url AS pageview,
		COUNT(pageview_each_session.website_session_id) AS sessions,
        COUNT(orders.order_id) AS orders,
        COUNT(orders.order_id)/COUNT(pageview_each_session.website_session_id) AS cvr_billing_to_oders,
        SUM(orders.price_usd * orders.items_purchased)/COUNT(pageview_each_session.website_session_id) AS revenue_per_billing_session FROM 
(SELECT website_sessions.website_session_id,
		website_pageviews.pageview_url FROM website_sessions
        LEFT JOIN website_pageviews ON website_sessions.website_session_id = website_pageviews.website_session_id
        WHERE website_sessions.created_at BETWEEN '2012-09-10' AND '2012-11-10' AND website_pageviews.pageview_url IN ('/billing','/billing-2')) pageview_each_session
        LEFT JOIN orders ON pageview_each_session.website_session_id = orders.website_session_id
		GROUP BY 1,2
UNION ALL
SELECT 'Last month' AS `date`,pageview_each_session.pageview_url AS pageview,
		COUNT(pageview_each_session.website_session_id) AS sessions,
        COUNT(orders.order_id) AS orders,
        COUNT(orders.order_id)/COUNT(pageview_each_session.website_session_id) AS cvr_billing_to_oders,
        SUM(orders.price_usd * orders.items_purchased)/COUNT(pageview_each_session.website_session_id) AS revenue_per_billing_session FROM 
(SELECT website_sessions.website_session_id,
		website_pageviews.pageview_url FROM website_sessions
        LEFT JOIN website_pageviews ON website_sessions.website_session_id = website_pageviews.website_session_id
        WHERE website_sessions.created_at BETWEEN DATE_SUB('2012-09-10', INTERVAL 1 MONTH) AND DATE_SUB('2012-11-10',INTERVAL 1 MONTH) AND website_pageviews.pageview_url IN ('/billing','/billing-2')) pageview_each_session
        LEFT JOIN orders ON pageview_each_session.website_session_id = orders.website_session_id
		GROUP BY 1,2
        ORDER BY 1,2;
-- 22.82 FOR BILLING, 31.34 FOR BILLING-2
-- LIFT: 8.51 FOR BILLING PAGE VIEW

SELECT COUNT(website_session_id) AS billing_sessions_past_month
FROM website_pageviews
WHERE website_pageviews.pageview_url IN ('/billing','/billing-2')
and created_at BETWEEN '2012-10-27' AND '2012-11-27' -- past month;

-- 1193
-- LIFT:8.51 per billing session
-- VALUE OF BILLING: 10,160 over the past month
